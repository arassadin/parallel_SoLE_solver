#include"sqrtMethod.h"

conjugateGradientSolver::conjugateGradientSolver(std::complex<double>** m, int size)
{
	matrix=m;
	systemSize=size;
}

bool conjugateGradientSolver::systemChecking(int pointer)
{
	bool flag=false;
	for(int i=0; i<systemSize; i++)
		if(matrix[i][pointer]!=std::complex<double>(0.0,0.0))
			flag=true;
	return flag;
}

std::complex<double>* conjugateGradientSolver::getSolve()
{
	if(systemSize<2)
	{
		std::cerr << "Bad systemSize!" << std::endl;
		return NULL;
	};
	for(int j=0; j<systemSize+1; j++)
		if(!systemChecking(j))
		{
			std::cerr << "Non equatable matrix!" << std::endl;
			return NULL;
		};
	for(int i=0; i<systemSize; i++)
		for(int j=0; j<systemSize; j++)
			if(matrix[i][j]!=matrix[j][i])
			{
				std::cerr << "Non symmetrical matrix!" << std::endl;
				return NULL;
			};
	return NULL;
}
